/* Google Fonts é uma biblioteca da Google com mais de 1000 fontes livres licenciadas. Além de
um diretório web interativo para navegar na biblioteca, existem atalhos para usar convenientemente as fontes
através do CSS.
Acessando o site do Google e na barra de pesquisa digitaremos "google fonts". Clicaremos no primeiro link,
o qual nos direcionará para o página inicial do Google Fonts. Essa página abrirá com diversas opções de fontes
e línguas. O código trará a URL dessa fonte acompanhada do peso selecionado. Basta copiar e colar. Portanto,
vamos copiar somente o trecho de CSS, sem a tag <style> */
@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap');

/*Propriedades personalizadas (às vezes chamadas de variáveis CSS ou variáveis em cascata) são entidades
definidas por autores CSS que contêm valores específicos a serem reutilizados em um documento. Eles são
definidos usando a notação de propriedade personalizada (por exemplo, --main-color: black;) e são acessados
usando a função var() (por exemplo, cor: var(--main-color);).
*/
:root {
    --cor-primaria: #227C70;
    --cor-secundaria: #E6E2C3;
    --cor-terciaria: #032450;
    --cor-hover: #88A47C; 

    --fonte-primaria: 'Krona One', sans-serif;
    --fonte-secundaria: 'Montserrat', sans-serif;
}

/* através do * selecionamos todas os elementos ou conteúdos da página
*/
* {
    margin: 0;
    padding: 0;
}

body {
    /* height: 100vh; */
    /* O 100vh é o mesmo que oculpar 100% da tela
    */
    box-sizing: border-box;
    /* controla os elementos filhos dentro do pai, por exemplo o body
    */
    background-color: var(--cor-primaria);
    color: var(--cor-secundaria);
}

.cabecalho {
    padding: 2% 0% 0% 8%;
}

.cabecalho__menu {
    display: flex;
    gap: 80px;
}

.cabecalho__menu__link {
    font-family: var(--fonte-secundaria);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--cor-terciaria);
    text-decoration: none;
}

.apresentacao {
    padding: 5% 8%;
    /* Utilizando o Flexbox - Flexbox é uma ferramenta do CSS que visa organizar os elementos de uma
    página HTML de forma dinâmica e mantendo um layout flexível. */
    display: flex; 
    /* Isso estabelece o eixo principal, definindo assim a direção que os itens flexíveis são
    colocados no flex container. Flexbox é (além do empacotamento opcional) um conceito de layout de direção
    única. Pense nos itens flexíveis como dispostos principalmente em linhas horizontais ou colunas verticais.*/
    align-items: center;
    /* Isso define o comportamento padrão de como os itens flexíveis são dispostos ao
    longo do eixo cruzado na linha atual. */
    justify-content: space-between;
    gap: 82px;
}

.apresentacao__conteudo {
    width: 45%;
    display: flex;
    flex-direction: column;
    gap: 40px;;
}

.apresentacao__conteudo__titulo {
    font-size: 2.25rem;
    font-family: var(--fonte-primaria);
}

/* o atributo class permite ao CSS selecionar e acessar elementos específicos através dos seletores de classe
*/
.titulo-destaque {
    color: var(--cor-terciaria);
}

.apresentacao__conteudo__texto {
    font-size: 1.5rem;
    font-family: var(--fonte-secundaria);
}

.apresentacao__conteudo__texto:hover {
    font-size: 1.6rem;
    
}

.apresentacao__links {
    /* sempre que utilizar os elementos do flexbox, é preciso adicionar o display: flex;
    */ 
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 32px;
}

.apresentacao__links__subtitulo {
    font-family: var(--fonte-primaria);
    font-weight: 400;
    font-size: 1.5rem;
}

.apresentacao__links__navegacao {
    /* background-color: #2D3047; */
    display: flex;
    justify-content: center;
    gap: 16px;
    border: 2px solid var(--cor-terciaria);
    width: 50%;
    text-align: center;
    border-radius: 8px;
    font-size: 1.5rem;
    padding: 21.5px 0;
    color: var(--cor-secundaria);
    text-decoration: none;
    font-family: var(--fonte-secundaria);
    font-weight: 600;
}

.apresentacao__links__navegacao:hover {
    background-color: var(--cor-terciaria);
}

.apresentacao__imagem {
    width: 45%;
}

.rodape {
    background-color: var(--cor-terciaria);
    color: var(--cor-secundaria);
    padding: 24px;
    text-align: center;
    font-family: var(--fonte-secundaria);
    font-weight: 400;
    font-size: 1.5rem;
}

/*
    - Usando Media Queries:
    Uma media query consiste de um media type e pelo menos uma expressão que limita o escopo das folhas de
    estilo usando media features, tal como largura, altura e cor. Media queries, adicionadas no CSS3, deixam
    a apresentação do conteúdo adaptado a uma gama especifica de dispositivos não precisando mudar
    o conteúdo em si.
    - Sintaxe:
    Media queries consistem de um media type (en-US) e podem, a partir de uma especificação CSS3, contendo uma
    ou mais expressões, expressa em media features, que determinam ou verdadeiro ou falso. Os resultados da
    query são verdadeiros se o media type especificado na media query corresponde ao tipo do documento exibido
    no dispositivo e todas as expressões na media query são verdadeiras.
*/
@media (max-width: 1200px) {
    .cabecalho {
        padding: 8% 0% 5%;
    }
    .cabecalho__menu {
        justify-content: center;
        gap: 120px;
    }
    .apresentacao {
        flex-direction: column-reverse;
    }
    .apresentacao__conteudo {
        width: auto;
    }
}